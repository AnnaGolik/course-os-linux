Терминал Linux, файловая структура Linux, программа df
#######################################################

:date: 2021-05-10
:summary: Описание лабы
:status: published
:author: Смирнова А.В.

.. contents

Терминал Linux
=====================

Теоретическое введение
------------------------
В Linux часто встречаются слова: терминал, командная строка, командная оболочка, эмулятор терминала. Все они относятся к терминалу, но означают немного разные вещи. Дадим определения каждому из них:

**Терминал** - это инструмент который позволяет управлять системой напрямую, а так же позволяет увидеть любое  действие, производимое в любой графической программе и в целом в системе, т.е и открытие пользователем любой папки и открытие любой программы, в тот же самый момент происходят в виде команд в терминале.



**Командная оболочка** -  это не только командный интерпретатор, который обеспечивает интерфейс взаимодействия между пользователем и ядром операционной системы, но и своеобразный язык программирования, в котором присутствуют такие конструкции, как операторы условного ветвления, циклы, переменные и многое другое.

**Эмулятор терминала** – это инструмент, который дает доступ к командной оболочке операционной системы. Он используется для запуска команд оболочки, графических приложений на основе терминала и многого другого.
Приведем примеры наиболее популярных эмуляторов:

* Mac OS X: iTerm 2

* Windows: PuTTY

* Linux: Terminal, KDE Konsole, XTerm

**Командная строка**  - текстовый интерфейс, который позволяет вводить команды, выполнять их и просматривать результаты

**Выполнение команд**


Команды можно выполнять с помощью командной строки, указав имя файла (бинарного файла или сценария). По умолчанию в системах Linux установлено много стандартных команд, которые позволяют перемещаться по файловой системе, устанавливать программное обеспечение и пакеты, настраивать систему и приложения и т.п.

Каждая запущенная команда является отдельным процессом. Если команда выполняется на переднем плане (по умолчанию все команды выполняются именно так), то пользователь не сможет работать с терминалом, пока команда не будет выполнена.


Практическая часть
-------------------
1. В качестве первой   практической части рассмотрим подробнее командную строку:

 * Запустите эмулятор терминала. Это можно сделать, например, с помощью горячих клавиш: Ctrl+Alt+T.  После появления окна на экране вы увидите нечто подобное:
 
.. code-block:: bash

    me@linuxbox:~$

Это называется *приглашением к вводу (shell. prompt)* и появляется всякий раз,
когда командная оболочка готова принять ввод. В. разных. дистрибутивах приглашение выглядит по-разному ,но обычно включает строку  *имя_пользователя@*,
*имя_компьютера*, за которой следует имя текущего каталога и знак доллара.

 * Наберите на компьютере любую бессмыслицу, например:
 
.. code-block:: bash

     me@linuxbox:~$ jninijqojwo

Поскольку это бессмыслица, командная оболочка немедленно сообщит об этом и даст вам второй шанс:

.. code:: bash

     bash: kaekfjaeifj: команда не найдена


2. В качестве второй практической части рассмотрим простые команды:

Первая команда: Date. Она выводит текущие время и дату:

.. code-block:: bash

     me@linuxbox:~$ date

.. code-block:: bash

Mon May 11 13:51:54 EDT 2021

Вторая команда: cal по умолчанию выводит календарь текущего месяца.

.. code-block:: bash

      me@linuxbox:~$ cal

Третья команда: free. Она позволяет увидеть объем свободного пространства в памяти:

.. code-block:: bash

      me@linuxbox:~$ free

Файловая структура Linux
=========================

Теоретическое введение
------------------------

В операционной системе Linux файлами считаются обычные файлы, каталоги, а также специальные файлы, соответствующие периферийным устройствам (каждое устройство представляется в виде файла). Доступ ко всем файлам однотипный, в том числе и к файлам периферийных устройств. Такой подход обеспечивает независимость программы пользователя от особенностей ввода-вывода на конкретное внешнее устройство.

Файловая структура Linux имеет иерархическую древовидную структуру. В корневом каталоге размещаются другие каталоги и файлы, включая 5 основных каталогов:

**bin** — большинство выполняемых командных программ и shell — процедур;

**tmp** — временные файлы;

**usr** — каталоги пользователей (условное обозначение);

**etc** — преимущественно административные утилиты и файлы;

**dev** — специальные файлы, представляющие периферийные устройства

*Текущий каталог* — это каталог, в котором в данный момент находится пользователь. При наличии прав доступа пользователь может перейти после входа в систему в другой каталог.

*Полное имя файла* может содержать имена каталогов, включая корневой, разделенных косой чертой, например:

 /home/student/file.txt.


Первая косая черта обозначает корневой каталог, и поиск файла будет начинаться с него, затем в каталоге home, а затем в каталоге student.


Один файл можно сделать принадлежащим нескольким каталогам. Для этого используется команда ln (link): ln.

*В Linux различаются 3 уровня доступа к файлам и каталогам*:

1) доступ владельца файла;

2) доступ группы пользователей, к которой принадлежит владелец файла;

3) остальные пользователи.

Важным понятием является **путь** - это маршрут , перечисляющий ветви дерева , по которым нужно пройти, чтобы достичь желаемого каталога. Пути могут определяться двумя способами:


* **Абсолютный путь** начинается с корневого каталога и перечисляет ветви дерева, отделяющие корень  от желаемого каталога или файла.


* **Относительный путь** в отличие от абсолютного начинается на рабочем. Для обозначения относительный позиций в дереве файловой системы используется пара специальных символов: *Текущий каталог обозначается точкой (.); родительский каталог, которому принадлежит текущий, обозначается двумя точками (..).*


Программа df
=============

Теоретическое введение
-----------------------


*Команда df используется для отображения использования дискового пространства файловой системой Linux в целом.*

По умолчанию команда df выводит имя устройства, общее количество блоков, используемое дисковое пространство, доступное дисковое пространство, процент использованного пространства и точку монтирования файловой системы.

Также важно отметить, что работать с df можно и без опций,  но это не принесет должного результата для тех, кто желает моментально получить интересующую информацию, поэтому и следует разобраться с аргументами.

* **a, --all**. Этот аргумент следует вписывать только в том случае, если вы заинтересованы в отображении абсолютно всех существующих файловых систем, включая виртуальные, недоступные и эмуляторы.

* **h** обязателен к применению при желании получить сведения о размерах не в байтах, а в мегабайтах или гигабайтах.

* **H** — при этой опции мегабайты будут опускаться, а все размеры сформатируются в гигабайты.

* **k** — данная опция используется реже остальных, поскольку является заменой -h и -H и показывает цифры в килобайтах.

* **t**, --type — это одна из опций-фильтров. Укажите -t, а затем введите название файловой системы, чтобы в результатах отображались только строки, связанные с ней.

Также существуют другие аргументы, но они используются намного реже.

Практическая часть
-------------------

Рассмотрим, как это выглядит на практике:

1. Для начала запустите «Терминал». Сделайте это, например, через меню приложений или стандартную горячую клавишу Ctrl + Alt + T.

2. Далее введите df в командной строке. И через несколько секунд вы увидите множество строк, отображающих сведения о монтированных файловых системах и дисках.

3.  Далее  сделайте упрощение читаемости полученных
результатов. Для этого по очереди введите аргументы, указанные в теоретическом введении. Проанализируйте полученные таблицы и убедитесь в том, что они стали гораздо проще и понятнее.
