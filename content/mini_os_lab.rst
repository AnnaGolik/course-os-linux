Модуль os
############################################

:date: 2022-05-16
:summary: mini os lab
:author: Баскаков
:status: published

.. default-role:: code
.. contents:: Содержание


Модуль os предоставляет множество функций для работы с операционной
системой, причём их поведение, как правило, не зависит от ОС, поэтому
программы остаются переносимыми. Здесь будут приведены наиболее часто
используемые из них.

Будьте внимательны: некоторые функции из этого модуля поддерживаются не
всеми ОС.

+----------------------------------------------------------------+--------------------------------------------------------------------+
|                            Команда                             |                              Описание                              |
+================================================================+====================================================================+
| ``os.name``                                                    | имя операционной системы.                                          |
|                                                                | Доступные варианты: ‘posix’,                                       |
|                                                                | ‘nt’, ‘mac’, ‘os2’, ‘ce’, ‘java’                                   |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.environ``                                                 | словарь переменных окружения.                                      |
|                                                                | Изменяемый (можно добавлять и                                      |
|                                                                | удалять переменные окружения)                                      |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.getlogin()``                                              | имя пользователя, вошедшего в                                      |
|                                                                | терминал (Unix).                                                   |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.getpid()``                                                | текущий id процесса.                                               |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.uname()``                                                 | информация об ОС. возвращает                                       |
|                                                                | объект с атрибутами: sysname -                                     |
|                                                                | имя операционной системы,                                          |
|                                                                | nodename - имя машины в сети                                       |
|                                                                | (определяется реализацией),                                        |
|                                                                | release - релиз, version -                                         |
|                                                                | версия, machine - идентификатор                                    |
|                                                                | машины.                                                            |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.access(path,                                              | проверка доступа к объекту у                                       |
| mode, *, dir_fd=None, effective_i                              | текущего пользователя. Флаги:                                      |
| ds=False, follow_symlinks=True)``                              | os.F_OK - объект существует,                                       |
|                                                                | os.R_OK - доступен на чтение,                                      |
|                                                                | os.W_OK - доступен на запись,                                      |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.X_OK`` - доступен на исполнение. ``os.chdir(path)``       | смена текущей директории.                                          |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.chmod(path, mode, *, dir_fd=None, follow_symlinks=True)`` | смена прав доступа к объекту                                       |
|                                                                | (mode - восьмеричное число).                                       |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.chown(path, uid, gid, *,                                  | меняет id владельца и группы (Unix)                                |
| dir_fd=None, follow_symlinks=True)``                           |                                                                    |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.getcwd()``                                                | текущая рабочая директория.                                        |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.link(src, dst, *, src_dir_fd=None,                        | создаёт жёсткую ссылку.                                            |
| dst_dir_fd=None, follow_symlinks=True)``                       |                                                                    |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.listdir(path=".")``                                       | список файлов и директорий в папке.                                |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.mkdir(path, mode=0o777, *, dir_fd=None)``                 | создаёт директорию. OSError,                                       |
|                                                                | если директория существует.                                        |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.makedirs(path, mode=0o777, exist_ok=False)``              | создаёт директорию, создавая                                       |
|                                                                | при этом промежуточные директории.                                 |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.remove(path, *, dir_fd=None)``                            | удаляет путь к файлу.                                              |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.rename(src, dst, *, src_dir_fd=None, dst_dir_fd=None)``   | переименовывает файл или директорию                                |
|                                                                | из src в dst.                                                      |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.renames(old, new)``                                       | переименовывает old в new, создавая                                |
|                                                                | промежуточные директории.                                          |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.replace(src, dst, *, src_dir_fd=None, dst_dir_fd=None)``  | переименовывает из src в dst с                                     |
|                                                                | принудительной заменой.                                            |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.rmdir(path, *, dir_fd=None)``                             | удаляет пустую директорию.                                         |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.removedirs(path)``                                        | удаляет директорию, затем пытается удалить                         |
|                                                                | родительские директории, и удаляет их рекурсивно, пока они пусты.  |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.symlink(source, link_name,                                | создаёт символическую ссылку на объект.                            |
| target_is_directory=False, *, dir_fd=None)``                   |                                                                    |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.sync()``                                                  | записывает все данные на диск (Unix).                              |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.truncate(path, length)``                                  | обрезает файл до длины length.                                     |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.utime(path, times=None, *, ns=None,                       | модификация времени последнего доступа и изменения файла.          |
| dir_fd=None, follow_symlinks=True)``                           | Либо times - кортеж                                                |
|                                                                | (время доступа в секундах, время изменения в секундах),            |
|                                                                | либо ns - кортеж                                                   |
|                                                                | (время доступа в наносекундах, время изменения в наносекундах).    |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.walk(top, topdown=True,                                   | генерация имён файлов в дереве каталогов,                          |
| onerror=None, followlinks=False)``                             | сверху вниз (если topdown равен True),                             |
|                                                                | либо снизу вверх (если False).                                     |
|                                                                | Для каждого каталога функция walk возвращает кортеж                |
|                                                                | (путь к каталогу, список каталогов, список файлов).                |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.system(command)``                                         | исполняет системную команду, возвращает                            |
|                                                                | код её завершения (в случае успеха 0).                             |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.urandom(n)``                                              | n случайных байт. Возможно использование                           |
|                                                                | этой функции в криптографических целях.                            |
+----------------------------------------------------------------+--------------------------------------------------------------------+
| ``os.path``                                                    | модуль, реализующий некоторые полезные функции на работы с путями. |
+----------------------------------------------------------------+--------------------------------------------------------------------+

Пример решения 1.
-----------------

Пользуясь расширением os можно получить список папок, документов
определеноого расширения или определенного названия.

.. code:: ipython3

    #решение
    import os
    list=[]
    for f in os.listdir(path="C:\\Users\\baska\\Desktop"):
        name, ext = os.path.splitext(f)
        if ext == '':
            list.append(name)
    print (list)


.. parsed-literal::

    ['chr', 'HW4', 'rfhnjgkz gj h;fnm', 'sql', 'Tor Browser', '[[1-4 сем]] Редкозубов - конспекты лекций (2015)', 'вита', 'ккм попытка 2', 'лабы', 'пикчес', 'Эмулятор PS2']
    

Пример решения 2.
-----------------

Можно вывести древовидную структуру папок.

.. code:: ipython3

    #решение
    
    def list_files(startpath):  
       for root, dirs, files in os.walk(startpath):
           if dir!= '.git':
               level = root.replace(startpath, '').count(os.sep)
               indent = ' ' * 4 * (level)
               print('{}{}/'.format(indent, os.path.basename(root)))
               subindent = ' ' * 4 * (level + 1)
               for f in files:
                   print('{}{}'.format(subindent, f))
    list_files("Desktop")

Пример решения 3.
-----------------

Существует возможность через питон создавать текстовые или иные файлы и
вносить в них правки.

.. code:: ipython3

    os.chdir("C:\\Users\\baska\\Desktop")
    text_file = open("text.txt", "a")
    text_file.write('greetings')
    def list_files_input(startpath,file):  
       for root, dirs, files in os.walk(startpath):
           if dir!= '.git':
               level = root.replace(startpath, '').count(os.sep)
               indent = ' ' * 4 * (level)
               file.write('{}{}/'.format(indent, os.path.basename(root)))
               subindent = ' ' * 4 * (level + 1)
               for f in files:
                   file.write('{}{}'.format(subindent, f))
    list_files_input("Desktop",text_file)

Задача 1.
---------

Напишите программу переименовывающую случайно созданный текстовый файл с
10 символьным случайно генерируемым содержимым на название заданное с
клавиатуры.

Задача 5.
---------

Напишите программу и узнайте размер этого файла.

Задача 6.
---------

Напишите программу переносящую файо в заланную с клавиатуры траекторию,
а за тем удалите файл.
