Работа с процессами (jobs, bg, fg) 
###############################################
:date: 2022-03-19 15:20
:summary:  Работа с процессами (jobs, bg, fg) 
:status: published
:author: Шатров П.А.


.. contents:: Содержание

**Теоретическое введение:** 
============================
Программа представляет собой серию инструкций, которая указывает компьютеру, что делать. Запущенный экземпляр программы называется процессом, которым мы управляем.
Linux,  как и большинство современных ОС, является многозадачной операционной системой. Это означает, что многие процессы могут выполняться одновременно. 
Наряду с процессами, которые мы запускаем, в системе могут быть и другие пользователи.

**fg, bg и jobs**
============================
Запущенный процесс в обычном режиме работает в режиме «foreground«, т.е. — «на переднем плане» или, другими словами, «в приоритетном режиме». 
В таком режиме он принимает команды с управляющего терминала, в котором он запущен, и на него же выводит информацию. Кроме того, он делает недоступным командную строку.
Может быть, мы хотим запустить процесс, который займет немного времени и с радостью сделает это без нашего вмешательства. Например, обработка очень большого текстового файла.
Тогда, мы можем запустить программу в фоновом режиме, а затем продолжить работу.  Кроме того, он делает недоступным командную строку.

Что бы запустить задачу в фоновом режиме — в конце команды необходимо добавить знак **&**
Отобразить список текущих фоновых задач можно командой **jobs**
(**jobs** — показать список текущих заданий, работающих в фоновом режиме.)

Либо — запустить её в обычном режиме, после чего нажать комбинацию **CTRL+Z**, отправив ей сигнал **TSTR** (Сигнал останова, генерируемый клавиатурой. 
Переводит процесс в фоновый режим). После этого — она появится в списке **jobs** с новым номером.

Теперь, что бы продолжить её выполнение в фоновом режиме необходимо ввести команду **bg** (background).
У задач в фоне имеется собственный номер, который всегда начинается с единицы (если нет других фоновых задач). 
Кроме того, **jobs** отображает состояние процесса — Running, Stopped, Done, Exit. Например, по окончании архивирования — статус задачи станет Done.
((**bg** —  возобновляющийся процесс продолжает выполняться в фоне без ввода пользователем каких-либо команд с терминала.)

Если команду **jobs** запустить из каталога отличного от того, в котором была запущена сама задача — **jobs** укажет её **wd** — working directory. 
Так же, необходимо учитывать, что для каждого управляющего терминала номера задач в **jobs** будут независимы и начинаться с единицы.

Что бы вывести задачу из фонового режима — используется команда **fg** (foreground), которой можно либо передать номер задачи в качестве аргумента, 
либо — запустить без аргументов. В последнем случае — будет выведена задача, отмеченная знаком **+** в списке **jobs**, т.е. — последняя отправленная «в фон» задача.
(**fg** — переместить фоновый процесс на передний план.)


**Команды для управления процессами**
========================================

**top**
Если мы хотим получить снимок того, что в данный момент происходит в системе, нужно использовать программу **top**.
(**top** - просмотр в режиме реального времени данных о процессах, запущенных в системе.)

**ps**
Другая программа для просмотра процессов называется **ps**, которая обозначает процессы. При обычном использовании покажет вам только процессы, запущенные в вашем текущем
терминале. 
(**ps** — получить список процессов, запущенных в системе.)

**kill**
Мы будем использовать это, чтобы определить, какой процесс отменить. Для этого мы используем программу, которая соответственно называется **kill**. 
Иногда запустив **kill**, процесс будет остановлен и завершен. Когда вы делаете это, **kill** отправляет процессу сигнал, который просит процесс завершиться. 
Мы всегда пробуем эту опцию в первую очередь, это лучший вариант.
(**kill** — завершить запуск процесса.)

**Практическая часть:**
============================

1).  Запуск долго исполняющейся команды в фоновом режиме.
Для запуска задачи в фоновом режиме используется символ **&** после имени команды:
::

    $ ping 127.0.0.1 &

Задаче присваивается идентификатор 1, вывод передается через этот же терминал, хотя сама задача исполняется в фоновом режиме, ведь если попытаться завершить
ее исполнение с помощью сочетания клавиш **CTRL+C**, ничего не получится. Также не лишним будет выполнить команду **jobs**, чтобы убедиться в наличии фоновой задачи
(ввиду того, что в примере вывод утилиты передается через тот же терминал, ввод команды будет осложнен): 

::

  $ jobs
    [1]+ Запущен ping 127.0.0.1 &
    
2). Перевод задачи в обычный режим.
Для перевода задачи в обычный режим следует использовать команду **fg**:
::

    $ fg %ping
    ping 127.0.0.1

Здесь в качестве идентификатора задачи было использовано начало команды, хотя можно бы было использовать такие идентификаторы, как **%1**. 
Задача начала исполняться в обычном режиме, поэтому для завершения ее исполнения может использоваться сочетание клавиш **CTRL+C**.
3). Остановка исполнения команды.
::

     ^Z
    [1]+  Stopped    ping 127.0.0.1

Для остановки исполнения команды было использовано сочетание клавиш **CTRL+Z**. В результате а задаче был присвоен идентификатор %1.
В этом достаточно просто убедиться с помощью команды **jobs**:
::

    $ jobs
    [1]+  Stopped    ping 127.0.0.1

4). Возобновление исполнения задачи в фоновом режиме при помощи **bg**.
::

    $ bg %ping
    [1]+ ping 127.0.0.1 &

Для перевода задачи в обычный режим и завершения её исполнения достаточно использовать п.2. Для завершения исполнения задачи использовать сочетание клавиш **CTRL+C**.

5). Просмотр фоновых процессов при помощи **jobs**
Пусть в фоне у нас одновременно работают несколько задач. Мы можем просмотреть список заданий с помощью **jobs**:
::

     $ jobs
     [1]-  Running    ping 127.0.0.1
     [2]+  Running    ping 127.0.0.2

Число в левой колонке — это порядковый номер задания, который bash присваивает ему при запуске. Плюс (+) у второго задания значит, что это «текущее задание»,
оно будет выведено на передний план при вводе fg. Вы также можете вывести на передний план конкретное задание указывая его номер; например, fg 1 
Наконец, состояние обоих процессов «Running» (выполняется) и их командная строка справа.




