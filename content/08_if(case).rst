Ветвление в Bash (case, if)
\\\\\\\\\\\\\\\\\\\\\\\\\\\
:date: 2022-03-05
:summary: Описание лабы
:status: published
:author: Климов К.А


.. contents:: Содержание

Теоретическая часть
=====================

После знакомства с основными переменными, строками и командами можем перейти к ветвлению в Bash, а именно к условным операторам **if** и **case**. Оператор **if**, как и в других языках, выполняет определенный блок указаний, в зависимости от условия. Условие помещают в двойные квадратные скобки ``[[ ... ]]``, которые bash рассматривает как один элемент с кодом выхода. Внутри блока операторов помещенных в ``[[ ]]`` разрешается использовать операторы **&&** и **||**.

.. Note:: Операторы **;** , **&&**, **||** используются для выполнения команд в определенной последовательности. Оператор **;** выполняет следующую команду независимо от результата предыдущей, **&&** выполняет следующую команду только после успешного выполнения предыдущей (**логическое и**), а **||** выполняется только после неудачного выполнения предыдущей команды (**логическое или**).

Пример условного скрипта:
::

   # Однострочная запись
   if [ ... ]; then echo "true"; else echo "false"; fi;

   ## Вложенные условия
   if [ ... ] && [ ... ]; then
     ...
   elif [[ ... && ... ]]; then
     ...
   else
     ...
   fi;

.. warning:: Обратите внимание, что ``[``, условие и ``]`` обязательно должны быть разделены пробелами, иначе оболочка воспримет в качестве команды ``[условие``.

Далее приведем таблицу с возможными условиями сравнения:
::

   # Работа с файлами
   -e    Проверить существует ли файл или директория (-f, -d)
   -f    Файл существует (!-f -- не существует)
   -d    Каталог существует (!-d -- не существует)
   -s    Файл существует и он не пустой
   -r    Файл существует и доступен для чтения
   -w    ... для записи
   -x    ... для выполнения
   -h    cимвольная ссылка

   # Работа со строками
   -z    Пустая строка
   -n    Не Пустая строка
   ==    Равно
   !=    Не равно

   # Операции с числами
   -eq   Равно
   -ne   Не равно
   -lt   Меньше
   -le   Меньше или равно
   -gt   Больше
   -ge   Больше или равно

Пример:
::

   #!/bin/bash
   if [ `uname` == "Adam"]; then
       echo "Не ешь яблоко!"
   elif [ `uname` == "Eva"] then
       echo "Не бери яблоко!"
   else
       echo "Яблоки сейчас очень дорогие!" 
   fi;

Если необходимо сделать выбор из нескольких альтернатив, пригодится оператор ``case``. Принцип его работы легче понять на примере:
::

  case "$extension" in
      (jpg|jpeg)
          echo "Это изображение в формате jpeg.";;
      png)
          echо "Это изображение в формате png";;
      gif)
           echo "А это ))" ;;
      *)
          echo "Оу!Это вообще не изображение!";;
  esac

В примере оператор проверяет значение переменной ``$extension`` на совпадение с одним из шаблонов и в случае совпадения выполнит соответствующий блок кода. Если же совпадений не будет, выполнятся указания, соответствующие шаблону ``*``.


-----

Также можно создавать сложные условные конструкции, используя вложенные условия. 
Например:
:: 

    #!/bin/bash
    echo "Введите производителя ноутбуков"
    read brand
    if [[ $brand == "Asus" ]] || [[ $brand == "Lenovo" ]] || [[ $brand == "Huawei" ]] || [[ $brand == "cropp" ]] ; then
        case $brand in
            Asus)
                echo "Скидка на ноутбуки $brand - 20%" ;;
            Lenovo)
                echo "Скидка на телефоны $brand - 10%" ;;
            Huawei)
                echo "Скидка на телефоны $brand - 5%" ;;
            *)
                echo "На этот вид товара нет скидок" ;;
        esac
    else
        echo " $brand - это не производитель ноутбуков"
    fi
    
Или можно написать аналогичный скрипт, используя только ``if``:
::

  #!/bin/bash
  echo "Введите производителя ноутбуков"
  read brand
  if [[ $brand == "Asus" ]] || [[ $brand == "Lenovo" ]] || [[ $brand == "Huawei" ]] || [[ $brand == "cropp" ]] ; then
      if [[ $brand == Asus ]] ; then
          echo "Скидка на ноутбуки $brand - 20%" 
      elif [[ $brand == Lenovo ]] ; then
          echo "Скидка на ноутбуки $brand - 10%" 
      elif [[ $brand == Huawei ]] ; then
          echo "Скидка на ноутбуки $brand - 5%"
      else 
          echo "На этот вид товара нет скидок" 
      fi
  else
      echo " $brand - это не производитель ноутбуков"
  fi

Практическая часть
===================

Задачи
-------------

Високосный год
~~~~~~~~~~~~~~~~~~~~~
Требуется определить, является ли данный год високосным. (Год является високосным, если его номер кратен 4, но не кратен 100, а также если он кратен 400).

Изучаем алфавит
~~~~~~~~~~~~~~~~~
Напишите скрипт, используя ``case``, который будет выводить к какому типу относится введенная вами буква (заглавная , строчная)

Египетский треугольник
~~~~~~~~~~~~~~~~~~~~~~~
Напишите скрипт, который считывае длины двух катетов, затем длину гипотенузы и проверяет является ли данный треугольник египетским.

